class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) 
    {
        int n = mat.size();
        int m = mat[0].size();
        unordered_map<int , vector<int>> u;
		// Inserting the gaps along with values into map
        for(int i = 0 ; i < n ; i++)
        {
            for(int j = 0 ; j < m ; j++)
            {
                u[i - j].push_back(mat[i][j]);
            }
        }
        // Sort the values 
        for(int gap = 1 - m ; gap < n ; gap++)
        {
            sort(u[gap].begin() , u[gap].end());
        }
        // Inserting values back into the matrix
        for(int i = n - 1 ; i >= 0 ; i--)
        {
            for(int j = m - 1 ; j >= 0 ; j--)
            {
                mat[i][j] = u[i - j].back();
                u[i - j].pop_back();
            }
        }
        return mat;
    }
};
